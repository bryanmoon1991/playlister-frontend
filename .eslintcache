[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js":"3","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js":"4","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js":"5","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js":"6","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js":"7","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js":"8","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js":"9","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js":"10"},{"size":763,"mtime":1608822702760,"results":"11","hashOfConfig":"12"},{"size":2672,"mtime":1608826733092,"results":"13","hashOfConfig":"12"},{"size":2489,"mtime":1608831035253,"results":"14","hashOfConfig":"12"},{"size":2340,"mtime":1608313805380,"results":"15","hashOfConfig":"12"},{"size":1227,"mtime":1608772730590,"results":"16","hashOfConfig":"12"},{"size":2227,"mtime":1608314111049,"results":"17","hashOfConfig":"12"},{"size":622,"mtime":1608828068622,"results":"18","hashOfConfig":"12"},{"size":1191,"mtime":1608743714571,"results":"19","hashOfConfig":"12"},{"size":8505,"mtime":1608831539152,"results":"20","hashOfConfig":"12"},{"size":3439,"mtime":1608827897799,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1olaaam",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js",[],["44","45"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js",["46"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js",["47"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js",["48"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js",["49"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js",["50"],"import { combineReducers } from 'redux';\nimport produce from 'immer';\n\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst defaultState = {\n  user: null,\n  spotifyApi: null,\n  searchResults: null,\n  recommended: [],\n  playlistBuild: {},\n  relatedArtists: {},\n  currentArtist: {},\n  playlists: [],\n}; \n\nconst currentUserReducer = (state = defaultState.user, action) => {\n  switch (action.type) {\n    case 'FETCH_CURRENT_USER':\n      return action.payload;\n    default:\n      return state;\n  }\n};  \n\n\n// const playlistSeedsReducer = produce((draft, action) => {\n//     switch (action.type) {\n//         case 'FIRST_SEED':\n//             draft.length = 0;\n//             draft.push(action.payload)\n//             return draft\n//         case 'CREATE_SEEDS':\n//             return action.payload\n//         case 'NO_SEEDS':\n//             return action.payload\n//         case 'ADD_SEED':\n//             draft.push(action.payload)\n//             return draft;\n//         case 'REMOVE_SEED':\n//             const index = draft.findIndex(seed => seed.id === action.payload.id)\n//             if (index !== -1) draft.splice(index, 1)\n//     }\n// }, defaultState.playlistSeeds)\n\nconst spotifyApiReducer = (state = defaultState.spotifyApi, action) => {\n    switch(action.type) {\n      case 'SET_AUTHORIZATION':\n            return action.payload;\n        default:  \n            return state;\n    }        \n}    \n\nconst currentUsersPlaylistsReducer = (state = defaultState.playlists, action) => {\n    switch (action.type) {\n        case 'GET_MY_PLAYLISTS':\n            return action.payload;\n        default:  \n            return state;\n    }        \n}    \n\nconst searchReducer = (state = defaultState.searchResults, action) => {\n  switch (action.type) {\n    case 'TYPE_TO_SEARCH':\n      return action.payload;\n    case 'CLEAR_RESULTS':\n      return action.payload;\n    default:\n      return state;\n  }    \n};  \n\nconst recommendedReducer = (state = defaultState.recommended, action) => {\n  switch (action.type) {\n    case 'RECOMMENDED_ARTISTS_AND_TRACKS':\n      return action.payload;\n    default:\n      return state;\n  }    \n};  \n\nconst playlistBuildReducer = (state = defaultState.playlistBuild, action) => {\n  switch (action.type) {\n    case 'PLAYLIST_BUILD':\n      return action.payload;\n    case 'DELETE_BUILD':\n      return action.payload;\n    default:\n      return state;\n  }    \n};  \n\n\n\n\nconst relatedArtistsReducer = (state = defaultState.relatedArtists, action) => {\n  switch (action.type) {\n    case 'RELATED_ARTISTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst currentArtistReducer = (state = defaultState.currentArtist, action) => {\n  switch (action.type) {\n    case 'CURRENT_ARTIST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\n    'user',\n    'spotifyApi',\n    'recommended',\n    'playlistBuild',\n    'relatedArtists',\n    'currentArtist',\n    'playlists',\n  ],\n};\n\n\nconst rootReducer = combineReducers({\n  user: currentUserReducer,\n  spotifyApi: spotifyApiReducer,\n  searchResults: searchReducer,\n  recommended: recommendedReducer,\n  playlistBuild: playlistBuildReducer,\n  relatedArtists: relatedArtistsReducer,\n  currentArtist: currentArtistReducer,\n  playlists: currentUsersPlaylistsReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":50,"column":6,"nodeType":"57","endLine":50,"endColumn":8,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":19,"column":8,"nodeType":"57","endLine":19,"endColumn":20,"suggestions":"60"},{"ruleId":"55","severity":1,"message":"61","line":35,"column":5,"nodeType":"57","endLine":35,"endColumn":7,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"63","line":25,"column":8,"nodeType":"57","endLine":25,"endColumn":28,"suggestions":"64"},{"ruleId":null,"fatal":true,"severity":2,"message":"65","line":15,"column":14},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchRecommended' and 'spotifyApi'. Either include them or remove the dependency array. If 'fetchRecommended' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'artist.id'. Either include it or remove the dependency array.",["69"],"React Hook useEffect has missing dependencies: 'loadBuild' and 'match'. Either include them or remove the dependency array. If 'loadBuild' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["70"],"React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.",["71"],"Parsing error: Unexpected token\n\n  13 |   relatedArtists: {},\n  14 |   currentArtist: {},\n> 15 |   playlists: ,\n     |              ^\n  16 | }; \n  17 | \n  18 | const currentUserReducer = (state = defaultState.user, action) => {","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [fetchRecommended, spotifyApi]",{"range":"80","text":"81"},"Update the dependencies array to be: [artist.id, spotifyApi]",{"range":"82","text":"83"},"Update the dependencies array to be: [loadBuild, match]",{"range":"84","text":"85"},"Update the dependencies array to be: [query, fetchSearch, spotifyApi]",{"range":"86","text":"87"},[1125,1127],"[fetchRecommended, spotifyApi]",[548,560],"[artist.id, spotifyApi]",[1097,1099],"[loadBuild, match]",[687,707],"[query, fetchSearch, spotifyApi]"]