[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Preview.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js":"3","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js":"4","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js":"5","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js":"6","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js":"7","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Card.js":"8","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/ResultsContainer.js":"9","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js":"10","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js":"11","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js":"12","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js":"13","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js":"14","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js":"15","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js":"16","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/TrackCard.js":"17","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/AlbumCard.js":"18"},{"size":1574,"mtime":1608869864911,"results":"19","hashOfConfig":"20"},{"size":3457,"mtime":1608839008584,"results":"21","hashOfConfig":"20"},{"size":1191,"mtime":1608743714571,"results":"22","hashOfConfig":"20"},{"size":1227,"mtime":1608772730590,"results":"23","hashOfConfig":"20"},{"size":2672,"mtime":1608826733092,"results":"24","hashOfConfig":"20"},{"size":806,"mtime":1608868082284,"results":"25","hashOfConfig":"20"},{"size":1072,"mtime":1608849875164,"results":"26","hashOfConfig":"20"},{"size":1125,"mtime":1608848813951,"results":"27","hashOfConfig":"20"},{"size":1309,"mtime":1608682336129,"results":"28","hashOfConfig":"20"},{"size":622,"mtime":1608828068622,"results":"29","hashOfConfig":"20"},{"size":2227,"mtime":1608314111049,"results":"30","hashOfConfig":"20"},{"size":404,"mtime":1608314124805,"results":"31","hashOfConfig":"20"},{"size":987,"mtime":1608868326614,"results":"32","hashOfConfig":"20"},{"size":2528,"mtime":1608850040770,"results":"33","hashOfConfig":"20"},{"size":2340,"mtime":1608313805380,"results":"34","hashOfConfig":"20"},{"size":2592,"mtime":1608832129691,"results":"35","hashOfConfig":"20"},{"size":141,"mtime":1608840234400,"results":"36","hashOfConfig":"20"},{"size":141,"mtime":1608840251317,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"1olaaam",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Preview.js",["82"],"import React, {useEffect, useState} from 'react'\nimport { Popup } from 'semantic-ui-react'\n\nconst Preview = ({album, spotifyApi}) => {\n\n    let [track, setTrack] = useState(undefined);\n    let [info, setInfo] = useState({ album: \"\", title: \"\"})\n\n    useEffect(() => {\n      spotifyApi.getAlbumTracks(album.id, 'US').then((data) => {\n        for (let i = 0; i < data.items.length; i++) {\n            let random = Math.floor(Math.random() * Math.floor(data.items.length));\n            if (data.items[random].preview_url) {\n                setTrack(new Audio(data.items[random].preview_url));\n                setInfo({album: album.name, title: data.items[random].name})\n                break;\n            }\n        }\n      });\n      \n      return () => {\n        setTrack(undefined);\n        setInfo({ album: \"\", title: \"\" })\n      };\n    }, [spotifyApi]);\n\n    const playPreview = () => {\n      track ? track.play() : console.log('no preview for this artist');\n    };\n\n    const stopPreview = () => {\n      if (track) {\n        track.pause();\n        track.currentTime = 0;\n      }\n    };\n    \n    return (\n        <>\n        <Popup\n            header={`Album: ${info.album}`}\n            content={`Track: ${info.title}`}\n            size='mini'\n            trigger={\n                <img \n                onMouseOver={() => playPreview()}\n                onMouseOut={() => stopPreview()}\n                src={album.images[album.images.length - 1].url}\n                alt={album.name} \n                />\n            }\n        />\n        </>\n    );\n}\n\nexport default Preview;","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js",["83"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js",["84"],"import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchSearch, clearResults} from '../Redux/actions'\nimport ResultsContainer from '../Containers/ResultsContainer';\n\n\nconst Search = ({fetchSearch, spotifyApi}) => {\n    const [query, setQuery] = useState({search: ''})\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setQuery({ [name]: value });\n    };\n\n    useEffect(() => {\n      if (query.search === '') {\n        console.log(\"empty search field\")\n      } else {\n        fetchSearch(query.search, spotifyApi)\n      }\n      return () => {\n        // need to fix\n        clearResults();\n      }\n    }, [query, fetchSearch])\n\n    return (\n      <>\n      <h2>\n        Begin playlist with an item from your search or...\n      </h2>\n        <form>\n          <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"track title or artist name...\"\n            value={query.search}\n            onChange={handleChange}\n          />\n        </form>\n\n        <ResultsContainer spotifyApi={spotifyApi}/> \n      </>\n    );\n}\n\n\nexport default connect(null, {fetchSearch, clearResults})(Search);",["85","86"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js",["87"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js",["88"],"import {connect} from 'react-redux';\nimport React, {useEffect, useState} from 'react'\nimport {fetchRecommended} from '../Redux/actions'\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { wrap } from 'popmotion';\nimport '../Styles/Recommended.css'\nimport * as BiIcons from 'react-icons/bi'\n\nconst msp = state => {\n    return {\n        user: state.user,\n        recommended: state.recommended\n    }\n}\n\nconst variants = {\n  enter: (direction) => {\n    return {\n      x: direction > 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1,\n  },\n  exit: (direction) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n};\n\n\nconst RecommendedContainer = ({user, recommended, fetchRecommended, spotifyApi}) => {\n  // mouse over recommended images to pause carousel\n  // const[running, setRunning] = useState(true)\n  // const runningRef = useRef(running)\n  // runningRef.current = running \n  \n    \n  useEffect(() => {\n    fetchRecommended(spotifyApi)\n    // return function cleanup() {\n    //   setRunning(false)\n    // }\n  }, [])\n\n  // paginating the recommended items \n  const [[page, direction], setPage] = useState([0, 0]); \n  const imageIndex = recommended.images ? wrap(0, recommended.images.length, page) : console.log('first render')\n  const paginate = (newDirection) => {\n    setPage([page + newDirection, newDirection]);\n  }; \n\n  // automate flipping through the recommended items\n  // setTimeout(() => {\n  //   if (runningRef.current) {\n  //     paginate(1)\n  //   } \n  // }, 4000) \n\n  return (\n    <>\n      {recommended.images && (\n        <>\n        <div className=\"recommended\">\n          <div className=\"next\" onClick={() => paginate(1)}>\n            <BiIcons.BiCaretLeft/>\n          </div>\n          <AnimatePresence initial={false} custom={direction}>\n            <motion.img\n              // onMouseOver={() => setRunning(false)}\n              // onMouseOut={() => setRunning(true)}\n              key={page}\n              src={recommended.images[imageIndex].url}\n              custom={direction}\n              variants={variants}\n              initial=\"enter\"\n              animate=\"center\"\n              exit=\"exit\"\n              transition={{\n                x: { type: 'spring', stiffness: 500, damping: 30 },\n                opacity: { duration: 0.1 },\n              }}\n            />\n          </AnimatePresence>\n          <div className=\"prev\" onClick={() => paginate(-1)}>\n            <BiIcons.BiCaretRight/>\n          </div>\n        </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default connect(msp, {fetchRecommended})(RecommendedContainer);\n",["89","90"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Card.js",[],["91","92"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/ResultsContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js",["93"],"import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PlaylistItem from './PlaylistItem';\nimport {updatePlaylist, loadBuild, deleteBuild} from '../Redux/actions'\n\nconst msp = (state) => {\n  return {\n    user: state.user,\n    playlistBuild: state.playlistBuild,\n  };\n};\n\nconst PlaylistBuilder = ({match, history, user, spotifyApi, playlistBuild, updatePlaylist, loadBuild, deleteBuild}) => {\n  let [{ name }, setName] = useState({ name: playlistBuild.name });\n  let [titleEdit, setTitleEdit] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setName((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const keyPress = (e) => {\n    if (e.key === 'Enter') {\n      updatePlaylist(playlistBuild.id, 'name', name);\n      setTitleEdit(!titleEdit);\n    }\n  };\n\n  // if the user navigates to the builder from the playlists we'll use match\n  // if not, the playlistBuild and playlistSeeds will be set from start new action\n  useEffect(() => {\n    if (match) {\n      loadBuild(match.params.id)\n      }\n  },[])\n\n\n  const renderSeeds = () => {\n    return playlistBuild.items.map((seed) => (\n      <PlaylistItem key={seed.id} seed={seed} playlistId={playlistBuild.id} />\n    ));\n  };\n\n  const handleDelete = (id) => {\n    deleteBuild(id)\n    history.push(`/users/${user.id}`) \n  }\n\n  return (\n    <>\n      <div className=\"builder\">\n        {playlistBuild.name ? (\n          <>\n            {titleEdit ? (\n              <input\n                value={name}\n                name=\"name\"\n                onChange={handleChange}\n                onKeyDown={keyPress}\n              ></input>\n            ) : (\n              <h3 onClick={() => setTitleEdit(!titleEdit)}>\n                {playlistBuild.name}\n              </h3>\n            )}\n            {renderSeeds()}\n            {match ? (\n              <button onClick={() => handleDelete(playlistBuild.id)}>\n                Delete this build\n              </button>\n            ) : undefined}\n          </>\n        ) : (\n          <h3>loading playlist builder</h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default connect(msp, {updatePlaylist, loadBuild, deleteBuild})(PlaylistBuilder);","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js",[],["94","95"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/TrackCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/AlbumCard.js",[],{"ruleId":"96","severity":1,"message":"97","line":25,"column":8,"nodeType":"98","endLine":25,"endColumn":20,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"96","severity":1,"message":"104","line":25,"column":8,"nodeType":"98","endLine":25,"endColumn":28,"suggestions":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"96","severity":1,"message":"110","line":19,"column":8,"nodeType":"98","endLine":19,"endColumn":20,"suggestions":"111"},{"ruleId":"96","severity":1,"message":"112","line":50,"column":6,"nodeType":"98","endLine":50,"endColumn":8,"suggestions":"113"},{"ruleId":"106","replacedBy":"114"},{"ruleId":"108","replacedBy":"115"},{"ruleId":"106","replacedBy":"116"},{"ruleId":"108","replacedBy":"117"},{"ruleId":"96","severity":1,"message":"118","line":35,"column":5,"nodeType":"98","endLine":35,"endColumn":7,"suggestions":"119"},{"ruleId":"106","replacedBy":"120"},{"ruleId":"108","replacedBy":"121"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'album.id' and 'album.name'. Either include them or remove the dependency array. If 'setInfo' needs the current value of 'album.name', you can also switch to useReducer instead of useState and read 'album.name' in the reducer.","ArrayExpression",["122"],"no-unused-vars","'produce' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.",["123"],"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"React Hook useEffect has a missing dependency: 'artist.id'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has missing dependencies: 'fetchRecommended' and 'spotifyApi'. Either include them or remove the dependency array. If 'fetchRecommended' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["127"],["124"],["125"],["124"],["125"],"React Hook useEffect has missing dependencies: 'loadBuild' and 'match'. Either include them or remove the dependency array. If 'loadBuild' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["128"],["124"],["125"],{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [album.id, album.name, spotifyApi]",{"range":"139","text":"140"},"Update the dependencies array to be: [query, fetchSearch, spotifyApi]",{"range":"141","text":"142"},"Update the dependencies array to be: [artist.id, spotifyApi]",{"range":"143","text":"144"},"Update the dependencies array to be: [fetchRecommended, spotifyApi]",{"range":"145","text":"146"},"Update the dependencies array to be: [loadBuild, match]",{"range":"147","text":"148"},[839,851],"[album.id, album.name, spotifyApi]",[687,707],"[query, fetchSearch, spotifyApi]",[548,560],"[artist.id, spotifyApi]",[1125,1127],"[fetchRecommended, spotifyApi]",[1097,1099],"[loadBuild, match]"]