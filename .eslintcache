[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Preview.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js":"3","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js":"4","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js":"5","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js":"6","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js":"7","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Card.js":"8","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/ResultsContainer.js":"9","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js":"10","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js":"11","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js":"12","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js":"13","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js":"14","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js":"15","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js":"16","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/AlbumCard.js":"17","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js":"18","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Track.js":"19","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/TracklistItem.js":"20"},{"size":2632,"mtime":1609105536425,"results":"21","hashOfConfig":"22"},{"size":3770,"mtime":1609171734690,"results":"23","hashOfConfig":"22"},{"size":1191,"mtime":1608743714571,"results":"24","hashOfConfig":"22"},{"size":2875,"mtime":1609108095334,"results":"25","hashOfConfig":"22"},{"size":2672,"mtime":1608826733092,"results":"26","hashOfConfig":"22"},{"size":806,"mtime":1608868082284,"results":"27","hashOfConfig":"22"},{"size":1420,"mtime":1609106026520,"results":"28","hashOfConfig":"22"},{"size":1364,"mtime":1609107644848,"results":"29","hashOfConfig":"22"},{"size":1282,"mtime":1608996255779,"results":"30","hashOfConfig":"22"},{"size":622,"mtime":1608828068622,"results":"31","hashOfConfig":"22"},{"size":2227,"mtime":1608314111049,"results":"32","hashOfConfig":"22"},{"size":404,"mtime":1608314124805,"results":"33","hashOfConfig":"22"},{"size":987,"mtime":1608868326614,"results":"34","hashOfConfig":"22"},{"size":5135,"mtime":1609108402323,"results":"35","hashOfConfig":"22"},{"size":2374,"mtime":1608934974850,"results":"36","hashOfConfig":"22"},{"size":2592,"mtime":1608832129691,"results":"37","hashOfConfig":"22"},{"size":3227,"mtime":1609107364591,"results":"38","hashOfConfig":"22"},{"size":10644,"mtime":1609123259086,"results":"39","hashOfConfig":"22"},{"size":2260,"mtime":1609124090316,"results":"40","hashOfConfig":"22"},{"size":1807,"mtime":1609010970906,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1olaaam",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Preview.js",["94"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js",["95","96"],"import { combineReducers } from 'redux';\nimport produce from 'immer';\n\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst defaultState = {\n  user: null,\n  spotifyApi: null,\n  searchResults: null,\n  recommended: [],\n  playlistBuild: {},\n  relatedArtists: {},\n  currentSelection: {},\n  stack: [],\n  playlists: [],\n}; \n\nconst currentUserReducer = (state = defaultState.user, action) => {\n  switch (action.type) {\n    case 'FETCH_CURRENT_USER':\n      return action.payload;\n    default:\n      return state;\n  }\n};  \n\n\n\n\nconst spotifyApiReducer = (state = defaultState.spotifyApi, action) => {\n    switch(action.type) {\n      case 'SET_AUTHORIZATION':\n            return action.payload;\n        default:  \n            return state;\n    }        \n}    \n\nconst currentUsersPlaylistsReducer = (state = defaultState.playlists, action) => {\n    switch (action.type) {\n        case 'GET_MY_PLAYLISTS':\n            return action.payload;\n        default:  \n            return state;\n    }        \n}    \n\nconst searchReducer = (state = defaultState.searchResults, action) => {\n  switch (action.type) {\n    case 'TYPE_TO_SEARCH':\n      return action.payload;\n    case 'CLEAR_RESULTS':\n      return action.payload;\n    default:\n      return state;\n  }    \n};  \n\nconst recommendedReducer = (state = defaultState.recommended, action) => {\n  switch (action.type) {\n    case 'RECOMMENDED_ARTISTS_AND_TRACKS':\n      return action.payload;\n    default:\n      return state;\n  }    \n};  \n\nconst playlistBuildReducer = (state = defaultState.playlistBuild, action) => {\n  switch (action.type) {\n    case 'PLAYLIST_BUILD':\n      return action.payload;\n    case 'DELETE_BUILD':\n      return action.payload;\n    default:\n      return state;\n  }    \n};  \n\n\n\n\nconst relatedArtistsReducer = (state = defaultState.relatedArtists, action) => {\n  switch (action.type) {\n    case 'RELATED_ARTISTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst currentSelectionReducer = produce((draft, action) => {\n  switch (action.type) {\n    case 'SWITCH_CURRENT':\n      return action.payload;\n    case 'ADD_MORE':\n      draft.albums = [...draft.albums, ...action.payload]\n  }\n}, defaultState.currentSelection);\n\n\nconst stackReducer = produce((draft, action) => {\n  switch (action.type) {\n    case 'INITIALIZE':\n      draft.length = 0;\n      draft.push(action.payload)\n      return draft\n  } \n}, defaultState.stack)\n\n\n// const playlistSeedsReducer = produce((draft, action) => {\n//     switch (action.type) {\n//         case 'FIRST_SEED':\n//             draft.length = 0;\n//             draft.push(action.payload)\n//             return draft\n//         case 'CREATE_SEEDS':\n//             return action.payload\n//         case 'NO_SEEDS':\n//             return action.payload\n//         case 'ADD_SEED':\n//             draft.push(action.payload)\n//             return draft;\n//         case 'REMOVE_SEED':\n//             const index = draft.findIndex(seed => seed.id === action.payload.id)\n//             if (index !== -1) draft.splice(index, 1)\n//     }\n// }, defaultState.playlistSeeds)\n\n\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: [\n    'user',\n    'spotifyApi',\n    'recommended',\n    'playlistBuild',\n    'relatedArtists',\n    'currentSelection',\n    'stack',\n    'playlists',\n  ],\n};\n\n\nconst rootReducer = combineReducers({\n  user: currentUserReducer,\n  spotifyApi: spotifyApiReducer,\n  searchResults: searchReducer,\n  recommended: recommendedReducer,\n  playlistBuild: playlistBuildReducer,\n  relatedArtists: relatedArtistsReducer,\n  currentSelection: currentSelectionReducer,\n  stack: stackReducer, \n  playlists: currentUsersPlaylistsReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js",["97"],"import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchSearch, clearResults} from '../Redux/actions'\nimport ResultsContainer from '../Containers/ResultsContainer';\n\n\nconst Search = ({fetchSearch, spotifyApi}) => {\n    const [query, setQuery] = useState({search: ''})\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setQuery({ [name]: value });\n    };\n\n    useEffect(() => {\n      if (query.search === '') {\n        console.log(\"empty search field\")\n      } else {\n        fetchSearch(query.search, spotifyApi)\n      }\n      return () => {\n        // need to fix\n        clearResults();\n      }\n    }, [query, fetchSearch])\n\n    return (\n      <>\n      <h2>\n        Begin playlist with an item from your search or...\n      </h2>\n        <form>\n          <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"track title or artist name...\"\n            value={query.search}\n            onChange={handleChange}\n          />\n        </form>\n\n        <ResultsContainer spotifyApi={spotifyApi}/> \n      </>\n    );\n}\n\n\nexport default connect(null, {fetchSearch, clearResults})(Search);",["98","99"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js",["100"],"import React, {useEffect, useState} from 'react';\nimport { Grid, Popup, Button, Header } from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {createNext} from '../Redux/actions';\n\nconst ArtistBubble = ({artist, spotifyApi, createNext, followNotify}) => {\n    let [track, setTrack] = useState(undefined)\n    let [info, setInfo] = useState({ name: \"\", title: \"\" })\n\n    useEffect(() => {\n        spotifyApi.getArtistTopTracks(artist.id, \"US\")\n        .then(data => {\n          if (data.tracks[0]) {\n            setTrack(new Audio(data.tracks[0].preview_url)) \n            setInfo({ name: artist.name, title: data.tracks[0].name} )\n          } else {\n            setInfo({ name: artist.name, title: \"Sorry, there is no preview\" })\n          }\n        })\n        \n        return () => {\n          setTrack(undefined)\n          setInfo({ name: \"\", title: \"\" })\n        }\n    }, [spotifyApi])\n\n    const playPreview = () => {\n      track ? track.play() : console.log(\"no preview for this artist\")\n    }\n\n    const stopPreview = () => {\n      if (track) {\n        track.pause()\n        track.currentTime = 0\n      }\n    }\n    \n    return (\n      <>\n        <Popup\n          size=\"mini\"\n          position=\"left center\"\n          hoverable\n          hideOnScroll\n          trigger={\n            <img\n              onMouseOver={() => playPreview()}\n              onMouseOut={() => stopPreview()}\n              className=\"bubble\"\n              alt=\"related-artist\"\n              //   sometimes causes an issue\n              src={artist.images[0].url}\n              width=\"50\"\n              height=\"50\"\n              onClick={() => {\n                createNext(artist, spotifyApi);\n                stopPreview();\n              }}\n            />\n          }\n        >\n          <Grid columns={1}>\n            <Grid.Column textAlign=\"left\">\n              <Header as=\"h4\">{`Artist: ${info.name}`}</Header>\n              <p>{`Top Track: ${info.title}`}</p>\n              <Button.Group>\n                <Popup\n                  mouseEnterDelay={500}\n                  position=\"bottom center\"\n                  size=\"mini\"\n                  content={`Follow ${info.name} on Spotify`}\n                  trigger={\n                    <Button\n                      icon=\"user plus\"\n                      size=\"mini\"\n                      onClick={() => followNotify(info.name)}\n                    />\n                  }\n                />\n                <Popup\n                  mouseEnterDelay={500}\n                  position=\"bottom center\"\n                  size=\"mini\"\n                  content=\"Open in Spotify\"\n                  trigger={<Button icon=\"external\" size=\"mini\" />}\n                />\n              </Button.Group>\n            </Grid.Column>\n          </Grid>\n        </Popup>\n      </>\n    );\n}\n\n\nexport default connect(null, {createNext})(ArtistBubble);",["101","102"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js",["103"],"import {connect} from 'react-redux';\nimport React, {useEffect, useState} from 'react'\nimport {fetchRecommended} from '../Redux/actions'\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { wrap } from 'popmotion';\nimport '../Styles/Recommended.css'\nimport * as BiIcons from 'react-icons/bi'\n\nconst msp = state => {\n    return {\n        user: state.user,\n        recommended: state.recommended\n    }\n}\n\nconst variants = {\n  enter: (direction) => {\n    return {\n      x: direction > 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1,\n  },\n  exit: (direction) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n};\n\n\nconst RecommendedContainer = ({user, recommended, fetchRecommended, spotifyApi}) => {\n  // mouse over recommended images to pause carousel\n  // const[running, setRunning] = useState(true)\n  // const runningRef = useRef(running)\n  // runningRef.current = running \n  \n    \n  useEffect(() => {\n    fetchRecommended(spotifyApi)\n    // return function cleanup() {\n    //   setRunning(false)\n    // }\n  }, [])\n\n  // paginating the recommended items \n  const [[page, direction], setPage] = useState([0, 0]); \n  const imageIndex = recommended.images ? wrap(0, recommended.images.length, page) : console.log('first render')\n  const paginate = (newDirection) => {\n    setPage([page + newDirection, newDirection]);\n  }; \n\n  // automate flipping through the recommended items\n  // setTimeout(() => {\n  //   if (runningRef.current) {\n  //     paginate(1)\n  //   } \n  // }, 4000) \n\n  return (\n    <>\n      {recommended.images && (\n        <>\n        <div className=\"recommended\">\n          <div className=\"next\" onClick={() => paginate(1)}>\n            <BiIcons.BiCaretLeft/>\n          </div>\n          <AnimatePresence initial={false} custom={direction}>\n            <motion.img\n              // onMouseOver={() => setRunning(false)}\n              // onMouseOut={() => setRunning(true)}\n              key={page}\n              src={recommended.images[imageIndex].url}\n              custom={direction}\n              variants={variants}\n              initial=\"enter\"\n              animate=\"center\"\n              exit=\"exit\"\n              transition={{\n                x: { type: 'spring', stiffness: 500, damping: 30 },\n                opacity: { duration: 0.1 },\n              }}\n            />\n          </AnimatePresence>\n          <div className=\"prev\" onClick={() => paginate(-1)}>\n            <BiIcons.BiCaretRight/>\n          </div>\n        </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default connect(msp, {fetchRecommended})(RecommendedContainer);\n",["104","105"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Card.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/ResultsContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js",["106"],"import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PlaylistItem from './PlaylistItem';\nimport {updatePlaylist, loadBuild, deleteBuild} from '../Redux/actions'\n\nconst msp = (state) => {\n  return {\n    user: state.user,\n    playlistBuild: state.playlistBuild,\n  };\n};\n\nconst PlaylistBuilder = ({match, history, user, spotifyApi, playlistBuild, updatePlaylist, loadBuild, deleteBuild}) => {\n  let [{ name }, setName] = useState({ name: playlistBuild.name });\n  let [titleEdit, setTitleEdit] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setName((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const keyPress = (e) => {\n    if (e.key === 'Enter') {\n      updatePlaylist(playlistBuild.id, 'name', name);\n      setTitleEdit(!titleEdit);\n    }\n  };\n\n  // if the user navigates to the builder from the playlists we'll use match\n  // if not, the playlistBuild and playlistSeeds will be set from start new action\n  useEffect(() => {\n    if (match) {\n      loadBuild(match.params.id)\n      }\n  },[])\n\n\n  const renderSeeds = () => {\n    return playlistBuild.items.map((seed) => (\n      <PlaylistItem key={seed.id} seed={seed} playlistId={playlistBuild.id} />\n    ));\n  };\n\n  const handleDelete = (id) => {\n    deleteBuild(id)\n    history.push(`/users/${user.id}`) \n  }\n\n  return (\n    <>\n      <div className=\"builder\">\n        {playlistBuild.name ? (\n          <>\n            {titleEdit ? (\n              <input\n                value={name}\n                name=\"name\"\n                onChange={handleChange}\n                onKeyDown={keyPress}\n              ></input>\n            ) : (\n              <h3 onClick={() => setTitleEdit(!titleEdit)}>\n                {playlistBuild.name}\n              </h3>\n            )}\n            {renderSeeds()}\n            {match ? (\n              <button onClick={() => handleDelete(playlistBuild.id)}>\n                Delete this build\n              </button>\n            ) : undefined}\n          </>\n        ) : (\n          <h3>loading playlist builder</h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default connect(msp, {updatePlaylist, loadBuild, deleteBuild})(PlaylistBuilder);","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js",[],["107","108"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js",[],["109","110"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js",[],["111","112"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/AlbumCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Track.js",["113","114"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/TracklistItem.js",["115","116"],"import React, { useState } from 'react';\nimport { Grid, Popup, Header, Button } from 'semantic-ui-react';\n\n\nconst TracklistItem = ({track}) => {\n    \n    let [preview, setPreview] = useState(new Audio(track.preview_url));\n\n    const playPreview = () => {\n      preview ? preview.play() : console.log('no preview for this artist');\n    };\n\n    const stopPreview = () => {\n      if (preview) {\n        preview.pause();\n        preview.currentTime = 0;\n      }\n    };\n   \n\n    return (\n    <>\n        <Popup\n        size=\"mini\"\n        position=\"left center\"\n        hoverable\n        hideOnScroll\n        trigger={\n            <h4\n            onMouseOver={() => playPreview()}\n            onMouseOut={() => stopPreview()}\n            >\n               {track.name} \n            </h4>\n        }\n        >\n        <Grid columns={1}>\n            <Grid.Column textAlign=\"left\">\n            <Button.Group>\n                <Popup\n                mouseEnterDelay={500}\n                position=\"bottom center\"\n                size=\"mini\"\n                content=\"favorite this track\"\n                trigger={<Button icon=\"like\" size=\"mini\" />}\n                />\n                <Popup\n                mouseEnterDelay={500}\n                position=\"bottom center\"\n                size=\"mini\"\n                content=\"open in spotify\"\n                trigger={<Button icon=\"external\" size=\"mini\" />}\n                />\n                <Popup\n                mouseEnterDelay={500}\n                position=\"bottom center\"\n                size=\"mini\"\n                content=\"add this track to playlist\"\n                trigger={<Button icon=\"add\" size=\"mini\" />}\n                />\n            </Button.Group>\n            </Grid.Column>\n        </Grid>\n        </Popup>\n    </>\n    );\n}\n\nexport default TracklistItem;",{"ruleId":"117","severity":1,"message":"118","line":27,"column":8,"nodeType":"119","endLine":27,"endColumn":20,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":93,"column":3,"nodeType":"123","messageId":"124","endLine":98,"endColumn":4},{"ruleId":"121","severity":1,"message":"122","line":103,"column":3,"nodeType":"123","messageId":"124","endLine":108,"endColumn":4},{"ruleId":"117","severity":1,"message":"125","line":25,"column":8,"nodeType":"119","endLine":25,"endColumn":28,"suggestions":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"117","severity":1,"message":"131","line":25,"column":8,"nodeType":"119","endLine":25,"endColumn":20,"suggestions":"132"},{"ruleId":"127","replacedBy":"133"},{"ruleId":"129","replacedBy":"134"},{"ruleId":"117","severity":1,"message":"135","line":50,"column":6,"nodeType":"119","endLine":50,"endColumn":8,"suggestions":"136"},{"ruleId":"127","replacedBy":"137"},{"ruleId":"129","replacedBy":"138"},{"ruleId":"117","severity":1,"message":"139","line":35,"column":5,"nodeType":"119","endLine":35,"endColumn":7,"suggestions":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"127","replacedBy":"145"},{"ruleId":"129","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":7,"column":19,"nodeType":"149","messageId":"150","endLine":7,"endColumn":29},{"ruleId":"147","severity":1,"message":"151","line":8,"column":16,"nodeType":"149","messageId":"150","endLine":8,"endColumn":23},{"ruleId":"147","severity":1,"message":"152","line":2,"column":23,"nodeType":"149","messageId":"150","endLine":2,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":7,"column":19,"nodeType":"149","messageId":"150","endLine":7,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'album.id' and 'album.name'. Either include them or remove the dependency array. If 'setInfo' needs the current value of 'album.name', you can also switch to useReducer instead of useState and read 'album.name' in the reducer.","ArrayExpression",["153"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.",["154"],"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"React Hook useEffect has missing dependencies: 'artist.id' and 'artist.name'. Either include them or remove the dependency array. If 'setInfo' needs the current value of 'artist.name', you can also switch to useReducer instead of useState and read 'artist.name' in the reducer.",["157"],["155"],["156"],"React Hook useEffect has missing dependencies: 'fetchRecommended' and 'spotifyApi'. Either include them or remove the dependency array. If 'fetchRecommended' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["158"],["155"],["156"],"React Hook useEffect has missing dependencies: 'loadBuild' and 'match'. Either include them or remove the dependency array. If 'loadBuild' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["159"],["155"],["156"],["155"],["156"],["155"],["156"],"no-unused-vars","'setPreview' is assigned a value but never used.","Identifier","unusedVar","'setInfo' is assigned a value but never used.","'Header' is defined but never used.",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [album.id, album.name, spotifyApi]",{"range":"170","text":"171"},"Update the dependencies array to be: [query, fetchSearch, spotifyApi]",{"range":"172","text":"173"},"Update the dependencies array to be: [artist.id, artist.name, spotifyApi]",{"range":"174","text":"175"},"Update the dependencies array to be: [fetchRecommended, spotifyApi]",{"range":"176","text":"177"},"Update the dependencies array to be: [loadBuild, match]",{"range":"178","text":"179"},[966,978],"[album.id, album.name, spotifyApi]",[687,707],"[query, fetchSearch, spotifyApi]",[891,903],"[artist.id, artist.name, spotifyApi]",[1125,1127],"[fetchRecommended, spotifyApi]",[1097,1099],"[loadBuild, match]"]