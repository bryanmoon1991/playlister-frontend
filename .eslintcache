[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js":"3","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ResultsContainer.js":"4","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js":"5","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/reportWebVitals.js":"6","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js":"7","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/UsersContainer.js":"8","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/RecommendedContainer.js":"9","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js":"10","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js":"11","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js":"12","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js":"13","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js":"14","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js":"15","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/UnpublishedContainer.js":"16"},{"size":1027,"mtime":1608156591106,"results":"17","hashOfConfig":"18"},{"size":2895,"mtime":1608182786791,"results":"19","hashOfConfig":"18"},{"size":5410,"mtime":1608223314815,"results":"20","hashOfConfig":"18"},{"size":1114,"mtime":1608158207422,"results":"21","hashOfConfig":"18"},{"size":2304,"mtime":1608172194284,"results":"22","hashOfConfig":"18"},{"size":362,"mtime":1607548221720,"results":"23","hashOfConfig":"18"},{"size":821,"mtime":1607809487390,"results":"24","hashOfConfig":"18"},{"size":3105,"mtime":1608214417059,"results":"25","hashOfConfig":"18"},{"size":2155,"mtime":1608156747606,"results":"26","hashOfConfig":"18"},{"size":773,"mtime":1608146668830,"results":"27","hashOfConfig":"18"},{"size":1243,"mtime":1608160315906,"results":"28","hashOfConfig":"18"},{"size":3503,"mtime":1608223253846,"results":"29","hashOfConfig":"18"},{"size":1079,"mtime":1608085443001,"results":"30","hashOfConfig":"18"},{"size":1012,"mtime":1608164856706,"results":"31","hashOfConfig":"18"},{"size":549,"mtime":1608223303558,"results":"32","hashOfConfig":"18"},{"size":836,"mtime":1608214820323,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1olaaam",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js",["71"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ResultsContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/reportWebVitals.js",[],["72","73"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js",[],["74","75"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/UsersContainer.js",["76"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/RecommendedContainer.js",["77","78"],"import {connect} from 'react-redux';\nimport React, {useEffect, useState} from 'react'\nimport {fetchRecommended} from '../Redux/actions'\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { wrap } from 'popmotion';\nimport './Recommended.css'\n\nconst msp = state => {\n    return {\n        user: state.user,\n        recommended: state.recommended\n    }\n}\n\nconst variants = {\n  enter: (direction) => {\n    return {\n      x: direction > 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1,\n  },\n  exit: (direction) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n};\n\n\nconst RecommendedContainer = ({user, recommended, fetchRecommended}) => {\n    \n  useEffect(() => {\n    fetchRecommended()\n  }, [])\n\n  \n  const [[page, direction], setPage] = useState([0, 0]); \n\n  const imageIndex = recommended.images ? wrap(0, recommended.images.length, page) : console.log('first render')\n  \n  const paginate = (newDirection) => {\n    setPage([page + newDirection, newDirection]);\n  }; \n  \n  console.log(\"in container:\", recommended)\n\n  const autoFlip = () => {\n    paginate(1)\n    setTimeout(() => autoFlip(), 5000)\n  }\n\n  return (\n    <>\n      {recommended.images && (\n        <>\n        <div className=\"recommended\">\n          <div className=\"next\" onClick={() => paginate(1)}>\n            {'‣'}\n          </div>\n          <AnimatePresence initial={false} custom={direction}>\n            <motion.img\n              key={page}\n              src={recommended.images[imageIndex].url}\n              custom={direction}\n              variants={variants}\n              initial=\"enter\"\n              animate=\"center\"\n              exit=\"exit\"\n              transition={{\n                x: { type: 'spring', stiffness: 500, damping: 30 },\n                opacity: { duration: 0.1 },\n              }}\n            />\n          </AnimatePresence>\n          <div className=\"prev\" onClick={() => paginate(-1)}>\n            {'‣'}\n          </div>\n        </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default connect(msp, {fetchRecommended})(RecommendedContainer);\n","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js",[],["79","80"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js",["81"],"// import React, {useState, useEffect} from 'react'\n// import {connect} from 'react-redux'\n// import {loadBuild} from '../Redux/actions'\n// import PlaylistItem from './PlaylistItem'\n\n// const msp = state => {\n//     return {\n//         user: state.user,\n//         spotifyApi: state.spotifyApi,\n//         playlistBuild: state.playlistBuild,\n//     }\n// }\n\n// const PlaylistBuilder = ({user, playlistBuild, spotifyApi}) => {\n\n\n//     console.log(\"in playlistBuilder:\", playlistBuild)\n\n\n//     let [seeds, setSeeds] = useState([])\n\n//     useEffect(() => {\n//         if (playlistBuild.items) {\n//             if (playlistBuild.items.length === 1) {\n//               spotifyApi.getArtist(playlistBuild.items[0])\n//               .then(data => {\n//                 setSeeds(data)\n//                 console.log(\"seeds\", seeds)\n//             });\n            \n//             } else if (playlistBuild.items.length === 0) {\n//                 return;\n//             } else {\n//               // need to check if this works\n//               spotifyApi.getArtists(playlistBuild.items.join(', '))\n//               .then((data) => setSeeds(data));\n//             }\n//         }\n//     }, [playlistBuild])\n    \n\n//     const renderSeeds = () => {\n//         if (seeds.length > 0) {\n//             return seeds.map(seed => <PlaylistItem seed={seed}/>)\n//         }\n//     }\n\n\n//     return (\n//         <>\n//             <div className=\"builder\">\n//                 {playlistBuild.name ? \n//                     <>\n//                     <h3>{playlistBuild.name}</h3> \n//                     {seeds.length === 0 ? \n//                     renderSeeds() :\n//                     <h3>Loading Seeds</h3>}\n//                     </>\n//                     :\n//                     <h3>loading playlist builder</h3>\n//                 }\n//             </div>\n//         </>\n//     )\n// }\n\n// export default connect(msp)(PlaylistBuilder);\n\n\n  \nimport React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport PlaylistItem from './PlaylistItem';\nimport {updatePlaylist} from '../Redux/actions'\n\nconst msp = (state) => {\n  return {\n    user: state.user,\n    playlistBuild: state.playlistBuild,\n    playlistSeeds: state.playlistSeeds,\n  };\n};\n\nconst PlaylistBuilder = ({ user, playlistBuild, playlistSeeds, updatePlaylist }) => {\n  console.log('in playlistBuilder:', playlistBuild, playlistSeeds);\n\n  let [{name}, setName] = useState({name: playlistBuild.name})\n  let [titleEdit, setTitleEdit] = useState(false)\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setName((prevState) => ({ ...prevState, [name]: value }));\n    };\n\n    const keyPress = (e) => {\n        if (e.key == 'Enter') {\n            updatePlaylist(playlistBuild.id, \"name\", name)\n            setTitleEdit(!titleEdit)\n        }\n    }\n\n  const renderSeeds = () => {\n    return playlistSeeds.map((seed) => <PlaylistItem seed={seed} playlistId={playlistBuild.id} />);\n  };\n\n  return (\n    <>\n      <div className=\"builder\">\n        {playlistBuild.name ? (\n          <>\n          {titleEdit ? \n          <input value={name} name=\"name\" onChange={handleChange} onKeyDown={keyPress}></input>\n          :\n            <h3 onClick={()=> setTitleEdit(!titleEdit)}>{playlistBuild.name}</h3>\n          }\n            {renderSeeds()}\n          </>\n        ) : (\n          <h3>loading playlist builder</h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default connect(msp, {updatePlaylist})(PlaylistBuilder);","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/UnpublishedContainer.js",[],{"ruleId":"82","severity":1,"message":"83","line":71,"column":5,"nodeType":"84","messageId":"85","endLine":84,"endColumn":6},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":null,"fatal":true,"severity":2,"message":"92","line":29,"column":17},{"ruleId":"93","severity":1,"message":"94","line":41,"column":6,"nodeType":"95","endLine":41,"endColumn":8,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":56,"column":22,"nodeType":"99","messageId":"100","endLine":56,"endColumn":30},{"ruleId":"86","replacedBy":"101"},{"ruleId":"88","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":96,"column":19,"nodeType":"105","messageId":"106","endLine":96,"endColumn":21},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"Parsing error: Unexpected token\n\n  27 |                 path=\"/users/:id/playlists/:id\"\n  28 |                 component={PlaylistBuilder}\n> 29 |                 }}\n     |                 ^\n  30 |               />\n  31 |               <Route\n  32 |                 path=\"/users/:id/playlists\"","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRecommended'. Either include it or remove the dependency array. If 'fetchRecommended' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["109"],"no-unused-vars","'autoFlip' is assigned a value but never used.","Identifier","unusedVar",["107"],["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [fetchRecommended]",{"range":"112","text":"113"},[802,804],"[fetchRecommended]"]