[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js":"3","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ResultsContainer.js":"4","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js":"5","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/reportWebVitals.js":"6"},{"size":1370,"mtime":1607896333300,"results":"7","hashOfConfig":"8"},{"size":667,"mtime":1607835788969,"results":"9","hashOfConfig":"8"},{"size":1083,"mtime":1607836593241,"results":"10","hashOfConfig":"8"},{"size":688,"mtime":1607837898275,"results":"11","hashOfConfig":"8"},{"size":786,"mtime":1607891901525,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1607548221720,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1olaaam",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js",["27"],"import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchSearch} from '../Redux/actions'\nimport ResultsContainer from './ResultsContainer';\nvar Spotify = require('spotify-web-api-js');\nvar spotifyApi = new Spotify()\n\n\nconst msp = (state) => {\n    return {\n        user: state.user,\n        searchResults: state.searchResults\n    }\n}\n\nconst Search = ({user, searchResults, fetchSearch}) => {\n    spotifyApi.setAccessToken(user.access_token)\n\n    // const [query, setQuery] = useReducer((state, newState) => ({ ...state, ...newState }), { search: '' });\n    const [query, setQuery] = useState({search: ''})\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setQuery({ [name]: value });\n    };\n\n    useEffect(() => {\n      if (query.search === '') {\n        console.log(\"empty search field\")\n      } else {\n        fetchSearch(spotifyApi, query.search)\n      }\n    }, [query])\n\n    return (\n      <>\n        <form>\n          <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"track title or artist name...\"\n            value={query.search}\n            onChange={handleChange}\n          />\n        </form>\n        {searchResults ?\n        <ResultsContainer/> :\n        undefined\n        }\n      </>\n    );\n}\n\n\nexport default connect(msp, {fetchSearch})(Search);","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ResultsContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/reportWebVitals.js",[],{"ruleId":"28","severity":1,"message":"29","line":33,"column":8,"nodeType":"30","endLine":33,"endColumn":15,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSearch'. Either include it or remove the dependency array. If 'fetchSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["32"],{"desc":"33","fix":"34"},"Update the dependencies array to be: [fetchSearch, query]",{"range":"35","text":"36"},[947,954],"[fetchSearch, query]"]