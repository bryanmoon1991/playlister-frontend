[{"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js":"1","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js":"2","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js":"3","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js":"4","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/reportWebVitals.js":"5","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js":"6","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js":"7","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js":"8","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js":"9","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js":"10","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js":"11","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js":"12","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js":"13","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/ResultsContainer.js":"14","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js":"15","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js":"16"},{"size":1191,"mtime":1608743714571,"results":"17","hashOfConfig":"18"},{"size":3440,"mtime":1608757633713,"results":"19","hashOfConfig":"18"},{"size":7368,"mtime":1608757499705,"results":"20","hashOfConfig":"18"},{"size":2340,"mtime":1608313805380,"results":"21","hashOfConfig":"18"},{"size":362,"mtime":1607548221720,"results":"22","hashOfConfig":"18"},{"size":1086,"mtime":1608329103226,"results":"23","hashOfConfig":"18"},{"size":985,"mtime":1608757779998,"results":"24","hashOfConfig":"18"},{"size":1206,"mtime":1608667072189,"results":"25","hashOfConfig":"18"},{"size":2227,"mtime":1608314111049,"results":"26","hashOfConfig":"18"},{"size":1150,"mtime":1608739032564,"results":"27","hashOfConfig":"18"},{"size":1204,"mtime":1608667064803,"results":"28","hashOfConfig":"18"},{"size":404,"mtime":1608314124805,"results":"29","hashOfConfig":"18"},{"size":797,"mtime":1608666965591,"results":"30","hashOfConfig":"18"},{"size":1309,"mtime":1608682336129,"results":"31","hashOfConfig":"18"},{"size":2736,"mtime":1608756922440,"results":"32","hashOfConfig":"18"},{"size":2736,"mtime":1608757568234,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"1olaaam",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Search.js",["74"],"import React, {useState, useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchSearch, clearResults} from '../Redux/actions'\nimport ResultsContainer from '../Containers/ResultsContainer';\n\n\nconst Search = ({fetchSearch, spotifyApi}) => {\n    const [query, setQuery] = useState({search: ''})\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n      setQuery({ [name]: value });\n    };\n\n    useEffect(() => {\n      if (query.search === '') {\n        console.log(\"empty search field\")\n      } else {\n        fetchSearch(query.search, spotifyApi)\n      }\n      return () => {\n        // need to fix\n        clearResults();\n      }\n    }, [query, fetchSearch])\n\n    return (\n      <>\n      <h2>\n        Begin playlist with an item from your search or...\n      </h2>\n        <form>\n          <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"track title or artist name...\"\n            value={query.search}\n            onChange={handleChange}\n          />\n        </form>\n\n        <ResultsContainer spotifyApi={spotifyApi}/> \n      </>\n    );\n}\n\n\nexport default connect(null, {fetchSearch, clearResults})(Search);","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/rootReducer.js",["75"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Redux/actions.js",["76"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Result.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/reportWebVitals.js",[],["77","78"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/index.js",["79"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport persistReducer from './Redux/rootReducer'\nimport rootReducer from './Redux/rootReducer'\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}> \n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["80","81"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/App.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/Discovery.js",[],["82","83"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistBuilder.js",["84"],"import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport PlaylistItem from './PlaylistItem';\nimport {updatePlaylist, loadBuild, deleteBuild} from '../Redux/actions'\n\nconst msp = (state) => {\n  return {\n    user: state.user,\n    playlistBuild: state.playlistBuild,\n  };\n};\n\nconst PlaylistBuilder = ({match, history, user, spotifyApi, playlistBuild, updatePlaylist, loadBuild, deleteBuild}) => {\n  let [{ name }, setName] = useState({ name: playlistBuild.name });\n  let [titleEdit, setTitleEdit] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setName((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const keyPress = (e) => {\n    if (e.key === 'Enter') {\n      updatePlaylist(playlistBuild.id, 'name', name);\n      setTitleEdit(!titleEdit);\n    }\n  };\n\n  // if the user navigates to the builder from the playlists we'll use match\n  // if not, the playlistBuild and playlistSeeds will be set from start new action\n  useEffect(() => {\n    if (match) {\n      loadBuild(match.params.id)\n      }\n  },[])\n\n\n  const renderSeeds = () => {\n    return playlistBuild.items.map((seed) => (\n      <PlaylistItem key={seed.id} seed={seed} playlistId={playlistBuild.id} />\n    ));\n  };\n\n  const handleDelete = (id) => {\n    deleteBuild(id)\n    history.push(`/users/${user.id}`) \n  }\n\n  return (\n    <>\n      <div className=\"builder\">\n        {playlistBuild.name ? (\n          <>\n            {titleEdit ? (\n              <input\n                value={name}\n                name=\"name\"\n                onChange={handleChange}\n                onKeyDown={keyPress}\n              ></input>\n            ) : (\n              <h3 onClick={() => setTitleEdit(!titleEdit)}>\n                {playlistBuild.name}\n              </h3>\n            )}\n            {renderSeeds()}\n            {match ? (\n              <button onClick={() => handleDelete(playlistBuild.id)}>\n                Delete this build\n              </button>\n            ) : undefined}\n          </>\n        ) : (\n          <h3>loading playlist builder</h3>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default connect(msp, {updatePlaylist, loadBuild, deleteBuild})(PlaylistBuilder);",["85","86"],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistBubble.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/ArtistCard.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Components/PlaylistItem.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UnpublishedContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/ResultsContainer.js",[],"/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/RecommendedContainer.js",["87","88"],"import {connect} from 'react-redux';\nimport React, {useEffect, useState, useRef} from 'react'\nimport {fetchRecommended} from '../Redux/actions'\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { wrap } from 'popmotion';\nimport '../Styles/Recommended.css'\nimport * as BiIcons from 'react-icons/bi'\n\nconst msp = state => {\n    return {\n        user: state.user,\n        recommended: state.recommended\n    }\n}\n\nconst variants = {\n  enter: (direction) => {\n    return {\n      x: direction > 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n  center: {\n    zIndex: 1,\n    x: 0,\n    opacity: 1,\n  },\n  exit: (direction) => {\n    return {\n      zIndex: 0,\n      x: direction < 0 ? 500 : -500,\n      opacity: 0,\n    };\n  },\n};\n\n\nconst RecommendedContainer = ({user, recommended, fetchRecommended, spotifyApi}) => {\n  // mouse over recommended images to pause carousel\n  // const[running, setRunning] = useState(true)\n  // const runningRef = useRef(running)\n  // runningRef.current = running \n  \n    \n  useEffect(() => {\n    fetchRecommended(spotifyApi)\n    // return function cleanup() {\n    //   setRunning(false)\n    // }\n  }, [])\n\n  // paginating the recommended items \n  const [[page, direction], setPage] = useState([0, 0]); \n  const imageIndex = recommended.images ? wrap(0, recommended.images.length, page) : console.log('first render')\n  const paginate = (newDirection) => {\n    setPage([page + newDirection, newDirection]);\n  }; \n\n  // automate flipping through the recommended items\n  // setTimeout(() => {\n  //   if (runningRef.current) {\n  //     paginate(1)\n  //   } \n  // }, 4000) \n\n  return (\n    <>\n      {recommended.images && (\n        <>\n        <div className=\"recommended\">\n          <div className=\"next\" onClick={() => paginate(1)}>\n            {/* {'‣'} */}\n            <BiIcons.BiCaretLeft/>\n          </div>\n          <AnimatePresence initial={false} custom={direction}>\n            <motion.img\n              // onMouseOver={() => setRunning(false)}\n              // onMouseOut={() => setRunning(true)}\n              key={page}\n              src={recommended.images[imageIndex].url}\n              custom={direction}\n              variants={variants}\n              initial=\"enter\"\n              animate=\"center\"\n              exit=\"exit\"\n              transition={{\n                x: { type: 'spring', stiffness: 500, damping: 30 },\n                opacity: { duration: 0.1 },\n              }}\n            />\n          </AnimatePresence>\n          <div className=\"prev\" onClick={() => paginate(-1)}>\n            <BiIcons.BiCaretRight/>\n            {/* {'‣'} */}\n          </div>\n        </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default connect(msp, {fetchRecommended})(RecommendedContainer);\n","/Users/bryanmoon/Flatiron/code/MOD_PROJECTS/playlister/playlister-frontend/src/Containers/UsersContainer.js",[],{"ruleId":"89","severity":1,"message":"90","line":25,"column":8,"nodeType":"91","endLine":25,"endColumn":28,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":15},{"ruleId":"93","severity":1,"message":"97","line":14,"column":7,"nodeType":"95","messageId":"96","endLine":14,"endColumn":19},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"93","severity":1,"message":"102","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":22},{"ruleId":"98","replacedBy":"103"},{"ruleId":"100","replacedBy":"104"},{"ruleId":"98","replacedBy":"105"},{"ruleId":"100","replacedBy":"106"},{"ruleId":"89","severity":1,"message":"107","line":35,"column":5,"nodeType":"91","endLine":35,"endColumn":7,"suggestions":"108"},{"ruleId":"98","replacedBy":"109"},{"ruleId":"100","replacedBy":"110"},{"ruleId":"93","severity":1,"message":"111","line":2,"column":37,"nodeType":"95","messageId":"96","endLine":2,"endColumn":43},{"ruleId":"89","severity":1,"message":"112","line":50,"column":6,"nodeType":"91","endLine":50,"endColumn":8,"suggestions":"113"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.","ArrayExpression",["114"],"no-unused-vars","'produce' is defined but never used.","Identifier","unusedVar","'refreshToken' is assigned a value but never used.","no-native-reassign",["115"],"no-negated-in-lhs",["116"],"'persistReducer' is defined but never used.",["115"],["116"],["115"],["116"],"React Hook useEffect has missing dependencies: 'loadBuild' and 'match'. Either include them or remove the dependency array. If 'loadBuild' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["117"],["115"],["116"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchRecommended' and 'spotifyApi'. Either include them or remove the dependency array. If 'fetchRecommended' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["118"],{"desc":"119","fix":"120"},"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [query, fetchSearch, spotifyApi]",{"range":"125","text":"126"},"Update the dependencies array to be: [loadBuild, match]",{"range":"127","text":"128"},"Update the dependencies array to be: [fetchRecommended, spotifyApi]",{"range":"129","text":"130"},[687,707],"[query, fetchSearch, spotifyApi]",[1097,1099],"[loadBuild, match]",[1133,1135],"[fetchRecommended, spotifyApi]"]